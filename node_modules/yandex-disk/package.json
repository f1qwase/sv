{
  "author": {
    "name": "Kolyaj",
    "email": "kolyaj@yandex.ru",
    "url": "https://github.com/Kolyaj"
  },
  "name": "yandex-disk",
  "description": "Yandex.Disk API for NodeJS.",
  "version": "0.0.2",
  "homepage": "https://github.com/Kolyaj/yandex-disk",
  "repository": {
    "type": "git",
    "url": "git://github.com/Kolyaj/yandex-disk.git"
  },
  "dependencies": {
    "dom-js": "*"
  },
  "devDependencies": {
    "async": "*"
  },
  "readme": "# Клиент для Яндекс.Диска на NodeJS\r\n\r\nУмеет\r\n\r\n* Создавать, читать и удалять файлы.\r\n* Создавать и удалять директории и получать список их содержимого.\r\n* Проверять существование файла или директории.\r\n* Публикация и закрытие файла.\r\n\r\nПока не умеет\r\n\r\n* Копирование и перемещение файлов и директорий.\r\n* Чтение и установка свойств файлов и директорий.\r\n* Запрос логина пользователя.\r\n* Оповещения об изменениях на диске.\r\n\r\n## Установка\r\n\r\n    npm install yandex-disk\r\n\r\n## Начало работы\r\n\r\n    var YandexDisk = require('yandex-disk').YandexDisk;\r\n    var disk = new YandexDisk(oauthToken); // доступ по OAuth токену\r\n    // или\r\n    var disk = new YandexDisk(login, password); // доступ по логину и паролю\r\n\r\n## Методы\r\n\r\n* `disk.cd(dirname)` - делает директорию текущей.\r\n* `disk.writeFile(path, content, encoding, callback)` - создаёт или перезаписывает файл.\r\n* `disk.uploadFile(srcFile, targetPath, callback)` - загружает файл из файловой системы на Я.Диск.\r\n* `disk.readFile(path, encoding, callback)` - читает файл.\r\n* `disk.downloadFile(srcPath, targetFile, callback)` - скачивает файл из Я.Диска в файловую систему.\r\n* `disk.remove(path, callback)` - удаляет файл или директорию.\r\n* `disk.exists(path, callback)` - проверяет существование файла или директории.\r\n* `disk.mkdir(dirname, callback)` - создаёт директорию.\r\n* `disk.readdir(path, callback)` - читает содержимое директории. Результатом является массив объектов с полями\r\n    * `href` - путь к файлу на Я.Диске\r\n    * `displayName` - отображаемое имя\r\n    * `creationDate` - дата создания (строка)\r\n    * `isDir` - если это директория, то true\r\n    * `size` - если это файл, то размер файла, иначе `0`\r\n    * `lastModified` - дата последней модификации (строка)\r\n* `disk.isPublic(path, callback)` - проверяет, опубликована ли директория или файл. Ссылку на файл возвращает в callback-функцию, если директория или файл опубликованы, иначе возвращает null.\r\n* `disk.publish(path, callback)` - публикует папку. В callback возвращает URL с публичной ссылкой.\r\n* `disk.unPublish(path, callback)` - удаляет публичный доступ к папке. В callback при корректной работе возвращает false.\r\n\r\nВсем callback-функциям передаются первым аргументом объект ошибки, вторым -- результат работы функции, если он есть.\r\n\r\n## Полезные ссылки\r\n\r\n[API Яндекс.Диска](http://api.yandex.ru/disk/)\r\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/Kolyaj/yandex-disk/issues"
  },
  "_id": "yandex-disk@0.0.2",
  "_from": "yandex-disk@"
}
